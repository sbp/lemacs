This is Info file ../info/texinfo.info, produced by Makeinfo-1.55 from
the input file texinfo.texinfo.

   This file documents Texinfo, a documentation system that uses a
single source file to produce both on-line information and a printed
manual.

   Copyright (C) 1988, 1990, 1991, 1992, 1993 Free Software Foundation,
Inc.

   This is the second edition of the Texinfo documentation,
and is consistent with version 2 of `texinfo.tex'.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that
the entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by the Free Software Foundation.


File: texinfo.info,  Node: Batch Formatting,  Next: Tag and Split Files,  Prev: texinfo-format commands,  Up: Create an Info File

Batch Formatting
================

   You can format Texinfo files for Info using `batch-texinfo-format'
and Emacs Batch mode.  You can run Emacs in Batch mode from any shell,
including a shell inside of Emacs.  (*Note Command Line Switches and
Arguments: (emacs)Command Switches.)

   Here is the command to format all the files that end in `.texinfo'
in the current directory (where `%' is the shell prompt):

     % emacs -batch -funcall batch-texinfo-format *.texinfo

Emacs processes all the files listed on the command line, even if an
error occurs while attempting to format some of them.

   Run `batch-texinfo-format' only with Emacs in Batch mode as shown;
it is not interactive.  It kills the Batch mode Emacs on completion.

   `batch-texinfo-format' is convenient if you lack `makeinfo' and want
to format several Texinfo files at once.  When you use Batch mode, you
create a new Emacs process.  This frees your current Emacs, so you can
continue working in it.  (When you run `texinfo-format-region' or
`texinfo-format-buffer', you cannot use that Emacs for anything else
until the command finishes.)


File: texinfo.info,  Node: Tag and Split Files,  Prev: Batch Formatting,  Up: Create an Info File

Tag Files and Split Files
=========================

   If a Texinfo file has more than 30,000 bytes,
`texinfo-format-buffer' automatically creates a tag table for its Info
file;  `makeinfo' always creates a tag table.  With a "tag table", Info
can jump to new nodes more quickly than it can otherwise.

   In addition, if the Texinfo file contains more than about 70,000
bytes, `texinfo-format-buffer' and `makeinfo' split the large Info file
into shorter "indirect" subfiles of about 50,000 bytes each.  Big files
are split into smaller files so that Emacs does not need to make a
large buffer to hold the whole of a large Info file; instead, Emacs
allocates just enough memory for the small, split off file that is
needed at the time.  This way, Emacs avoids wasting memory when you run
Info.  (Before splitting was implemented, Info files were always kept
short and "include files" were designed as a way to create a single,
large printed manual out of the smaller Info files.  *Note Include
Files::, for more information.  Include files are still used for very
large documents, such as `The Emacs Lisp Reference Manual', in which
each chapter is a separate file.)

   When a file is split, Info itself makes use of a shortened version of
the original file that contains just the tag table and references to
the files that were split off.  The split off files are called
"indirect" files.

   The split off files have names that are created by appending `-1',
`-2', `-3' and so on to the file name specified by the `@setfilename'
command.  The shortened version of the original file continues to have
the name specified by `@setfilename'.

   At one stage in writing this document, for example, the Info file
was saved as `test-texinfo' and that file looked like this:

     Info file: test-texinfo,    -*-Text-*-
     produced by texinfo-format-buffer
     from file: new-texinfo-manual.texinfo
     
     ^_
     Indirect:
     test-texinfo-1: 102
     test-texinfo-2: 50422
     test-texinfo-3: 101300
     ^_^L
     Tag table:
     (Indirect)
     Node: overview^?104
     Node: info file^?1271
     Node: printed manual^?4853
     Node: conventions^?6855
     ...

(But `test-texinfo' had far more nodes than are shown here.)  Each of
the split off, indirect files, `test-texinfo-1', `test-texinfo-2', and
`test-texinfo-3', is listed in this file after the line that says
`Indirect:'.  The tag table is listed after the line that says `Tag
table:'.

   In the list of indirect files, the number following the file name
records the cumulative number of bytes in the preceding indirect files,
not counting the file list itself, the tag table, or the permissions
text in each file.  In the tag table, the number following the node name
records the location of the beginning of the node, in bytes from the
beginning.

   If you are using `texinfo-format-buffer' to create Info files, you
may want to run the `Info-validate' command.  (The `makeinfo' command
does such a good job on its own, you do not need `Info-validate'.)
However, you cannot run the `M-x Info-validate' node-checking command
on indirect files.  For information on how to prevent files from being
split and how to validate the structure of the nodes, see *Note Using
Info-validate::.


File: texinfo.info,  Node: Install an Info File,  Next: Command List,  Prev: Create an Info File,  Up: Top

Installing an Info File
***********************

   Info files are usually kept in the `info' directory.  (You can find
the location of this directory within Emacs by typing `C-h i' to enter
Info and then typing `C-x C-f' to see the full pathname to the `info'
directory.)

* Menu:

* Directory file::              The top level menu for all Info files.
* New Info File::               Listing a new info file.
* Other Info Directories::      How to specify Info files that are
                                  located in other directories.


File: texinfo.info,  Node: Directory file,  Next: New Info File,  Up: Install an Info File

The `dir' File
==============

   For Info to work, the `info' directory must contain a file that
serves as a top level directory for the Info system.  By convention,
this file is called `dir'.  The `dir' file is itself an Info file.  It
contains the top level menu for all the Info files in the system.  The
menu looks like this:

     * Menu:
     
     * Info:    (info).     Documentation browsing system.
     * Emacs:   (emacs).    The extensible, self-documenting
                            text editor.
     * Texinfo: (texinfo).  With one source file, make
                            either a printed manual using
                            TeX or an Info file.
     ...

   Each of these menu entries points to the `Top' node of the Info file
that is named in parentheses.  (The menu entry does not need to specify
the `Top' node, since Info goes to the `Top' node if no node name is
mentioned.  *Note Nodes in Other Info Files: Other Info Files.)

   Thus, the `Info' entry points to the `Top' node of the `info' file
and the `Emacs' entry points to the `Top' node of the `emacs' file.

   In each of the Info files, the `Up' pointer of the `Top' node refers
back to the `dir' file.  For example, the line for the `Top' node of
the Emacs manual looks like this in Info:

     File: emacs  Node: Top, Up: (DIR), Next: Distrib

(Note that in this case, the `dir' file name is written in upper case
letters--it can be written in either upper or lower case.  Info has a
feature that it will change the case of the file name to lower case if
it cannot find the name as written.)


File: texinfo.info,  Node: New Info File,  Next: Other Info Directories,  Prev: Directory file,  Up: Install an Info File

Listing a New Info File
=======================

   To add a new Info file to your system, write a menu entry for it in
the menu in the `dir' file in the `info' directory.  Also, move the new
Info file itself to the `info' directory.  For example, if you were
adding documentation for GDB, you would write the following new entry:

     * GDB: (gdb).           The source-level C debugger.

The first part of the menu entry is the menu entry name, followed by a
colon.  The second part is the name of the Info file, in parentheses,
followed by a period.  The third part is the description.

   Conventionally, the name of an Info file has a `.info' extension.
Thus, you might list the name of the file like this:

     * GDB: (gdb.info).           The source-level C debugger.

However, Info will look for a file with a `.info' extension if it does
not find the file under the name given in the menu.  This means that
you can refer to the file `gdb.info' as `gdb', as shown in the first
example.  This looks better.


File: texinfo.info,  Node: Other Info Directories,  Prev: New Info File,  Up: Install an Info File

Info Files in Other Directories
===============================

   If an Info file is not in the `info' directory, there are two ways
to specify its location:

   * Write the pathname as the menu's second part, or;

   * Specify the `info' directory name in an environment variable in
     your `.profile' or `.cshrc' initialization file.  (Only you and
     others with the same environment variable will be able to find Info
     files whose location is specified this way.)

   For example, to reach a test file in the `~bob/manuals' directory,
you could add an entry like this to the menu in the `dir' file:

     * Test: (~bob/manuals/info-test).  Bob's own test file.

In this case, the absolute file name of the `info-test' file is written
as the second part of the menu entry.

   Alternatively, you can tell Info where to look by setting the
`INFOPATH' environment variable in your `.cshrc' or `.profile' file.

   If you use `sh' or `bash' for your shell command interpreter, you
must set the `INFOPATH' environment variable in the `.profile'
initialization file; but if you use `csh', you must set the variable in
the `.cshrc' initialization file.  The two files require slightly
different command formats.

   * In a `.cshrc' file, you could set the `INFOPATH' variable as
     follows:

          setenv INFOPATH .:~bob/manuals:/usr/local/emacs/info

   * In a `.profile' file, you would achieve the same effect by writing:

          INFOPATH=.:~bob/manuals:/usr/local/emacs/info
          export INFOPATH

Either form would cause Info to look first in the current directory,
indicated by the `.', then in the `~bob/manuals' directory, and finally
in the `/usr/local/emacs/info' directory (which is a common location
for the standard Info directory).


File: texinfo.info,  Node: Command List,  Next: Tips,  Prev: Install an Info File,  Up: Top

@-Command List
**************

   Here is an alphabetical list of the @-commands in Texinfo.  Square
brackets, [ ], indicate optional arguments; an ellipsis, `...',
indicates repeated text.

`@*'
     Force a line break. Do not end a paragraph that uses `@*' with an
     `@refill' command.  *Note Line Breaks::.

`@.'
     Stands for a period that really does end a sentence (usually after
     an end-of-sentence capital letter).  *Note Controlling Spacing::.

`@:'
     Indicate to TeX that an immediately preceding period, question
     mark, exclamation mark, or colon does not end a sentence.  Prevent
     TeX from inserting extra whitespace as it does at the end of a
     sentence.  The command has no effect on the Info file output.
     *Note Controlling Spacing::.

`@@'
     Stands for `@'.  *Note Inserting `@': Braces Atsigns Periods.

`@{'
     Stands for a left-hand brace, `{'.  *Note Inserting @ braces and
     periods: Braces Atsigns Periods.

`@}'
     Stands for a right-hand brace, `}'.  *Note Inserting @ braces and
     periods: Braces Atsigns Periods.

`@appendix TITLE'
     Begin an appendix.  The title appears in the table of contents of
     a printed manual.  In Info, the title is underlined with
     asterisks.  *Note The `@unnumbered' and `@appendix' Commands:
     unnumbered & appendix.

`@appendixsec TITLE'
`@appendixsection TITLE'
     Begin an appendix section within an appendix.  The section title
     appears in the table of contents of a printed manual.  In Info,
     the title is underlined with equal signs.  `@appendixsection' is a
     longer spelling of the `@appendixsec' command.  *Note Section
     Commands: unnumberedsec appendixsec heading.

`@appendixsubsec TITLE'
     Begin an appendix subsection within an appendix.  The title appears
     in the table of contents of a printed manual.  In Info, the title
     is underlined with hyphens.  *Note Subsection Commands:
     unnumberedsubsec appendixsubsec subheading.

`@appendixsubsubsec TITLE'
     Begin an appendix subsubsection within a subappendix.  The title
     appears in the table of contents of a printed manual.  In Info, the
     title is underlined with periods.  *Note The `subsub' Commands:
     subsubsection.

`@asis'
     Used following `@table', `@ftable', and `@vtable' to print the
     table's first column without highlighting ("as is").  *Note Making
     a Two-column Table: Two-column Tables.

`@author AUTHOR'
     Typeset AUTHOR flushleft and underline it.  *Note The `@title' and
     `@author' Commands: title subtitle author.

`@b{TEXT}'
     Print TEXT in bold font.  No effect in Info.  *Note Fonts::.

`@bullet{}'
     Generate a large round dot, or the closest possible thing to one.
     *Note `@bullet': bullet.

`@bye'
     Stop formatting a file.  The formatters do not see the contents of
     a file following an `@bye' command.  *Note Ending a File::.

`@c COMMENT'
     Begin a comment in Texinfo.  The rest of the line does not appear
     in either the Info file or the printed manual.  A synonym for
     `@comment'.  *Note General Syntactic Conventions: Conventions.

`@cartouche'
     Highlight an example or quotation by drawing a box with rounded
     corners around it.  Pair with `@end cartouche'.  No effect in
     Info.  *Note Drawing Cartouches Around Examples: cartouche.)

`@center LINE-OF-TEXT'
     Center the line of text following the command.  *Note `@center':
     titlefont center sp.

`@chapheading TITLE'
     Print a chapter-like heading in the text, but not in the table of
     contents of a printed manual.  In Info, the title is underlined
     with asterisks.  *Note `@majorheading' and `@chapheading':
     majorheading & chapheading.

`@chapter TITLE'
     Begin a chapter.  The chapter title appears in the table of
     contents of a printed manual.  In Info, the title is underlined
     with asterisks.  *Note `@chapter': chapter.

`@cindex ENTRY'
     Add ENTRY to the index of concepts.  *Note Defining the Entries of
     an Index: Index Entries.

`@cite{REFERENCE}'
     Highlight the name of a book or other reference that lacks a
     companion Info file.  *Note `@cite': cite.

`@clear FLAG'
     Unset FLAG, preventing the Texinfo formatting commands from
     formatting text between subsequent pairs of `@ifset FLAG' and
     `@end ifset' commands, and preventing `@value{FLAG}' from
     expanding to the value to which FLAG is set.  *Note `@set'
     `@clear' `@value': set clear value.

`@code{SAMPLE-CODE}'
     Highlight text that is an expression, a syntactically complete
     token of a program, or a program name.  *Note `@code': code.

`@comment COMMENT'
     Begin a comment in Texinfo.  The rest of the line does not appear
     in either the Info file or the printed manual.  A synonym for `@c'.
     *Note General Syntactic Conventions: Conventions.

`@contents'
     Print a complete table of contents.  Has no effect in Info, which
     uses menus instead.  *Note Generating a Table of Contents:
     Contents.

`@copyright{}'
     Generate a copyright symbol.  *Note `@copyright': copyright symbol.

`@defcodeindex INDEX-NAME'
     Define a new index and its indexing command.  Print entries in an
     `@code' font.  *Note Defining New Indices: New Indices.

`@defcv CATEGORY CLASS NAME'
     Format a description for a variable associated with a class in
     object-oriented programming.  Takes three arguments: the category
     of thing being defined, the class to which it belongs, and its
     name.  *Note Definition Commands::.

`@deffn CATEGORY NAME ARGUMENTS...'
     Format a description for a function, interactive command, or
     similar entity that may take arguments.  `@deffn' takes as
     arguments the category of entity being described, the name of this
     particular entity, and its arguments, if any.  *Note Definition
     Commands::.

`@defindex INDEX-NAME'
     Define a new index and its indexing command.  Print entries in a
     roman font.  *Note Defining New Indices: New Indices.

`@defivar CLASS INSTANCE-VARIABLE-NAME'
     Format a description for an instance variable in object-oriented
     programming.  The command is equivalent to `@defcv {Instance
     Variable} ...'.  *Note Definition Commands::.

`@defmac MACRO-NAME ARGUMENTS...'
     Format a description for a macro.  The command is equivalent to
     `@deffn Macro ...'.  *Note Definition Commands::.

`@defmethod CLASS METHOD-NAME ARGUMENTS...'
     Format a description for a method in object-oriented programming.
     The command is equivalent to `@defop Method ...'.  Takes as
     arguments the name of the class of the method, the name of the
     method, and its arguments, if any.  *Note Definition Commands::.

`@defop CATEGORY CLASS NAME ARGUMENTS...'
     Format a description for an operation in object-oriented
     programming.  `@defop' takes as arguments the overall name of the
     category of operation, the name of the class of the operation, the
     name of the operation, and its arguments, if any.  *Note
     Definition Commands::.

`@defopt OPTION-NAME'
     Format a description for a user option.  The command is equivalent
     to `@defvr {User Option} ...'.  *Note Definition Commands::.

`@defspec SPECIAL-FORM-NAME ARGUMENTS...'
     Format a description for a special form.  The command is
     equivalent to `@deffn {Special Form} ...'.  *Note Definition
     Commands::.

`@deftp CATEGORY NAME-OF-TYPE ATTRIBUTES...'
     Format a description for a data type.  `@deftp' takes as arguments
     the category, the name of the type (which is a word like `int' or
     `float'), and then the names of attributes of objects of that
     type.  *Note Definition Commands::.

`@deftypefn CLASSIFICATION DATA-TYPE NAME ARGUMENTS...'
     Format a description for a function or similar entity that may take
     arguments and that is typed.  `@deftypefn' takes as arguments the
     classification of entity being described, the type, the name of
     the entity, and its arguments, if any.  *Note Definition
     Commands::.

`@deftypefun DATA-TYPE FUNCTION-NAME ARGUMENTS...'
     Format a description for a function in a typed language.  The
     command is equivalent to `@deftypefn Function ...'.  *Note
     Definition Commands::.

`@deftypevr CLASSIFICATION DATA-TYPE NAME'
     Format a description for something like a variable in a typed
     language--an entity that records a value.  Takes as arguments the
     classification of entity being described, the type, and the name of
     the entity.  *Note Definition Commands::.

`@deftypevar DATA-TYPE VARIABLE-NAME'
     Format a description for a variable in a typed language.  The
     command is equivalent to `@deftypevr Variable ...'.  *Note
     Definition Commands::.

`@defun FUNCTION-NAME ARGUMENTS...'
     Format a description for functions.  The command is equivalent to
     `@deffn Function ...'.  *Note Definition Commands::.

`@defvar VARIABLE-NAME'
     Format a description for variables.  The command is equivalent to
     `@defvr Variable ...'.  *Note Definition Commands::.

`@defvr CATEGORY NAME'
     Format a description for any kind of variable.  `@defvr' takes as
     arguments the category of the entity and the name of the entity.
     *Note Definition Commands::.

`@dfn{TERM}'
     Highlight the introductory or defining use of a term.  *Note
     `@dfn': dfn.

`@display'
     Begin a kind of example.  Indent text, do not fill, do not select a
     new font.  Pair with `@end display'.  *Note `@display': display.

`@dmn{DIMENSION}'
     Format a dimension.  Cause TeX to insert a narrow space before
     DIMENSION.  No effect in Info.  Use for writing a number followed
     by an abbreviation of a dimension name, such as `12pt', written as
     `12@dmn{pt}', with no space between the number and the `@dmn'
     command.  *Note `@dmn': dmn.

`@dots{}'
     Insert an ellipsis: `...'.  *Note `@dots': dots.

`@emph{TEXT}'
     Highlight TEXT; text is displayed in *italics* in printed output,
     and surrounded by asterisks in Info.  *Note Emphasizing Text:
     Emphasis.

`@enumerate [NUMBER-OR-LETTER]'
     Begin a numbered list, using `@item' for each entry.  Optionally,
     start list with NUMBER-OR-LETTER.  Pair with `@end enumerate'.
     *Note `@enumerate': enumerate.

`@equiv{}'
     Indicate to the reader the exact equivalence of two forms with a
     glyph: `=='.  *Note Equivalence::.

`@error{}'
     Indicate to the reader with a glyph that the following text is an
     error message: `error-->'.  *Note Error Glyph::.

`@evenfooting [LEFT] @| [CENTER] @| [RIGHT]'
     Specify page footings for even-numbered (left-hand) pages.  Not
     relevant to Info.  *Note How to Make Your Own Headings: Custom
     Headings.

`@evenheading [LEFT] @| [CENTER] @| [RIGHT]'
     Specify page headings for even-numbered (left-hand) pages.  Not
     relevant to Info.  *Note How to Make Your Own Headings: Custom
     Headings.

`@everyfooting [LEFT] @| [CENTER] @| [RIGHT]'
     Specify page footings for every page.  Not relevant to Info.
     *Note How to Make Your Own Headings: Custom Headings.

`@everyheading [LEFT] @| [CENTER] @| [RIGHT]'
     Specify page headings for every page.  Not relevant to Info.
     *Note How to Make Your Own Headings: Custom Headings.

`@example'
     Begin an example.  Indent text, do not fill, and select
     fixed-width font.  Pair with `@end example'.  *Note `@example':
     example.

`@exdent LINE-OF-TEXT'
     Remove any indentation a line might have.  *Note Undoing the
     Indentation of a Line: exdent.

`@expansion{}'
     Indicate the result of a macro expansion to the reader with a
     special glyph: `==>'.  *Note ==> Indicating an Expansion:
     expansion.

`@file{FILENAME}'
     Highlight the name of a file, buffer, node, or directory.  *Note
     `@file': file.

`@finalout'
     Prevent TeX from printing large black warning rectangles beside
     over-wide lines.  *Note Overfull hboxes::.

`@findex ENTRY'
     Add ENTRY to the index of functions.  *Note Defining the Entries
     of an Index: Index Entries.

`@flushleft'
     Left justify every line but leave the right end ragged.  Leave
     font as is.  Pair with `@end flushleft'.  *Note `@flushleft' and
     `@flushright': flushleft & flushright.

`@flushright'
     Right justify every line but leave the left end ragged.  Leave
     font as is.  Pair with `@end flushright'.  *Note `@flushleft' and
     `@flushright': flushleft & flushright.

`@footnote{TEXT-OF-FOOTNOTE}'
     Enter a footnote.  Footnote text is printed at the bottom of the
     page by TeX; Info may format in either `End' node or `Separate'
     node style.  *Note Footnotes::.

`@footnotestyle STYLE'
     Specify an Info file's footnote style, either `end' for the end
     node style or `separate' for the separate node style.  *Note
     Footnotes::.

`@format'
     Begin a kind of example.  Like `@example' or `@display', but do
     not narrow the margins and do not select the fixed-width font.
     Pair with `@end format'.  *Note `@example': example.

`@ftable FORMATTING-COMMAND'
     Begin a two-column table, using `@item' for each entry.
     Automatically enter each of the items in the first column into the
     index of functions.  Pair with `@end ftable'.  The same as
     `@table', except for indexing.  *Note `@ftable' and `@vtable':
     ftable vtable.

`@group'
     Hold text together that must appear on one printed page.  Pair with
     `@end group'.  Not relevant to Info.  *Note `@group': group.

`@heading TITLE'
     Print an unnumbered section-like heading in the text, but not in
     the table of contents of a printed manual.  In Info, the title is
     underlined with equal signs.  *Note Section Commands:
     unnumberedsec appendixsec heading.

`@headings ON-OFF-SINGLE-DOUBLE'
     Turn page headings on or off, or specify single-sided or
     double-sided page headings for printing.  `@headings on' is
     synonymous with `@headings double'.  *Note The `@headings'
     Command: headings on off.

`@i{TEXT}'
     Print TEXT in italic font.  No effect in Info.  *Note Fonts::.

`@ifclear FLAG'
     If FLAG is cleared, the Texinfo formatting commands format text
     between `@ifclear FLAG' and the following `@end ifclear' command.
     *Note `@set' `@clear' `@value': set clear value.

`@ifinfo'
     Begin a stretch of text that will be ignored by TeX when it
     typesets the printed manual.  The text appears only in the Info
     file.  Pair with `@end ifinfo'.  *Note Conditionally Visible Text:
     Conditionals.

`@ifset FLAG'
     If FLAG is set, the Texinfo formatting commands format text
     between `@ifset FLAG' and the following `@end ifset' command.
     *Note `@set' `@clear' `@value': set clear value.

`@iftex'
     Begin a stretch of text that will not appear in the Info file, but
     will be processed only by TeX.  Pair with `@end iftex'.  *Note
     Conditionally Visible Text: Conditionals.

`@ignore'
     Begin a stretch of text that will not appear in either the Info
     file or the printed output.  Pair with `@end ignore'.  *Note
     Comments and Ignored Text: Comments.

`@include FILENAME'
     Incorporate the contents of the file FILENAME into the Info file
     or printed document.  *Note Include Files::.

`@inforef{NODE-NAME, [ENTRY-NAME], INFO-FILE-NAME}'
     Make a cross reference to an Info file for which there is no
     printed manual.  *Note Cross references using `@inforef': inforef.

`\input MACRO-DEFINITIONS-FILE'
     Use the specified macro definitions file.  This command is used
     only in the first line of a Texinfo file to cause TeX to make use
     of the `texinfo' macro definitions file.  The backslash in `\input'
     is used instead of an `@' because TeX does not properly recognize
     `@' until after it has read the definitions file.  *Note The
     Texinfo File Header: Header.

`@item'
     Indicate the beginning of a marked paragraph for `@itemize' and
     `@enumerate'; indicate the beginning of the text of a first column
     entry for `@table', `@ftable', and `@vtable'.  *Note Lists and
     Tables::.

`@itemize  MARK-GENERATING-CHARACTER-OR-COMMAND'
     Produce a sequence of indented paragraphs, with a mark inside the
     left margin at the beginning of each paragraph.  Pair with `@end
     itemize'.  *Note `@itemize': itemize.

`@itemx'
     Like `@item' but do not generate extra vertical space above the
     item text.  *Note `@itemx': itemx.

`@kbd{KEYBOARD-CHARACTERS}'
     Indicate text that consists of characters of input to be typed by
     users.  *Note `@kbd': kbd.

`@key{KEY-NAME}'
     Highlight KEY-NAME, a conventional name for a key on a keyboard.
     *Note `@key': key.

`@kindex ENTRY'
     Add ENTRY to the index of keys.  *Note Defining the Entries of an
     Index: Index Entries.

`@lisp'
     Begin an example of Lisp code.  Indent text, do not fill, and
     select fixed-width font.  Pair with `@end lisp'.  *Note `@lisp':
     Lisp Example.

`@majorheading  TITLE'
     Print a chapter-like heading in the text, but not in the table of
     contents of a printed manual.  Generate more vertical whitespace
     before the heading than the `@chapheading' command.  In Info, the
     chapter heading line is underlined with asterisks.  *Note
     `@majorheading' and `@chapheading': majorheading & chapheading.

`@menu'
     Mark the beginning of a menu of nodes in Info.  No effect in a
     printed manual.  Pair with `@end menu'.  *Note Menus::.

`@minus{}'
     Generate a minus sign.  *Note `@minus': minus.

`@need N'
     Start a new page in a printed manual if fewer than N mils
     (thousandths of an inch) remain on the current page.  *Note
     `@need': need.

`@node NAME, NEXT, PREVIOUS, UP'
     Define the beginning of a new node in Info, and serve as a locator
     for references for TeX.  *Note `@node': node.

`@noindent'
     Prevent text from being indented as if it were a new paragraph.
     *Note `@noindent': noindent.

`@oddfooting [LEFT] @| [CENTER] @| [RIGHT]'
     Specify page footings for odd-numbered (right-hand) pages.  Not
     relevant to Info.  *Note How to Make Your Own Headings: Custom
     Headings.

`@oddheading [LEFT] @| [CENTER] @| [RIGHT]'
     Specify page headings for odd-numbered (right-hand) pages.  Not
     relevant to Info.  *Note How to Make Your Own Headings: Custom
     Headings.

`@page'
     Start a new page in a printed manual.  No effect in Info.  *Note
     `@page': page.

`@paragraphindent INDENT'
     Indent paragraphs by INDENT number of spaces; delete indentation
     if the value of INDENT is 0; and do not change indentation if
     INDENT is `asis'. *Note Paragraph Indenting: paragraphindent.

`@pindex ENTRY'
     Add ENTRY to the index of programs.  *Note Defining the Entries of
     an Index: Index Entries.

`@point{}'
     Indicate the position of point in a buffer to the reader with a
     glyph: `-!-'.  *Note Indicating Point in a Buffer: Point Glyph.

`@print{}'
     Indicate printed output to the reader with a glyph: `-|'.  *Note
     Print Glyph::.

`@printindex INDEX-NAME'
     Print an alphabetized two-column index in a printed manual or
     generate an alphabetized menu of index entries for Info.  *Note
     Printing Indices & Menus::.

`@pxref{NODE-NAME, [ENTRY], [TOPIC-OR-TITLE], [INFO-FILE], [MANUAL]}'
     Make a reference that starts with a lower case `see' in a printed
     manual.  Use within parentheses only.  Do not follow command with a
     punctuation mark.  The Info formatting commands automatically
     insert terminating punctuation as needed, which is why you do not
     need to insert punctuation.  Only the first argument is mandatory.
     *Note `@pxref': pxref.

`@quotation'
     Narrow the margins to indicate text that is quoted from another
     real or imaginary work.  Write command on a line of its own.  Pair
     with `@end quotation'.  *Note `@quotation': quotation.

`@r{TEXT}'
     Print TEXT in roman font.  No effect in Info.  *Note Fonts::.

`@ref{NODE-NAME, [ENTRY], [TOPIC-OR-TITLE], [INFO-FILE], [MANUAL]}'
     Make a reference.  In a printed manual, the reference does not
     start with a `See'.  Follow command with a punctuation mark.  Only
     the first argument is mandatory.  *Note `@ref': ref.

`@refill'
     In Info, refill and indent the paragraph after all the other
     processing has been done.  No effect on TeX, which always refills.
     This command is no longer needed, since all formatters now
     automatically refill.  *Note Refilling Paragraphs::.

`@result{}'
     Indicate the result of an expression to the reader with a special
     glyph: `=>'.  *Note `@result': result.

`@samp{TEXT}'
     Highlight TEXT that is a literal example of a sequence of
     characters.  Used for single characters, for statements, and often
     for entire shell commands.  *Note `@samp': samp.

`@sc{TEXT}'
     Set TEXT in a printed output in THE SMALL CAPS FONT and set text
     in the Info file in uppercase letters.  *Note Smallcaps::.

`@section TITLE'
     Begin a section within a chapter.  In a printed manual, the section
     title is numbered and appears in the table of contents.  In Info,
     the title is underlined with equal signs.  *Note `@section':
     section.

`@set FLAG [STRING]'
     Make FLAG active, causing the Texinfo formatting commands to
     format text between subsequent pairs of `@ifset FLAG' and `@end
     ifset' commands.  Optionally, set value of FLAG to STRING.  *Note
     `@set' `@clear' `@value': set clear value.

`@setchapternewpage ON-OFF-ODD'
     Specify whether chapters start on new pages, and if so, whether on
     odd-numbered (right-hand) new pages.  *Note `@setchapternewpage':
     setchapternewpage.

`@setfilename INFO-FILE-NAME'
     Provide a name for the Info file.  *Note General Syntactic
     Conventions: Conventions.

`@settitle TITLE'
     Provide a title for page headers in a printed manual.  *Note
     General Syntactic Conventions: Conventions.

`@shortcontents'
     Print a short table of contents.  Not relevant to Info, which uses
     menus rather than tables of contents.  A synonym for
     `@summarycontents'.  *Note Generating a Table of Contents:
     Contents.

`@smallbook'
     Cause TeX to produce a printed manual in a 7 by 9.25 inch format
     rather than the regular 8.5 by 11 inch format.  *Note Printing
     Small Books: smallbook.  Also, see *Note `@smallexample' and
     `@smalllisp': smallexample & smalllisp.

`@smallexample'
     Indent text to indicate an example.  Do not fill, select
     fixed-width font.  In `@smallbook' format, print text in a smaller
     font than with `@example'.  Pair with `@end smallexample'.  *Note
     `@smallexample' and `@smalllisp': smallexample & smalllisp.

`@smalllisp'
     Begin an example of Lisp code.  Indent text, do not fill, select
     fixed-width font.  In `@smallbook' format, print text in a smaller
     font.  Pair with `@end smalllisp'.  *Note `@smallexample' and
     `@smalllisp': smallexample & smalllisp.

`@sp N'
     Skip N blank lines.  *Note `@sp': sp.

`@strong TEXT'
     Emphasize TEXT by typesetting it in a *bold* font for the printed
     manual and by surrounding it with asterisks for Info.  *Note
     Emphasizing Text: emph & strong.

`@subheading TITLE'
     Print an unnumbered subsection-like heading in the text, but not in
     the table of contents of a printed manual.  In Info, the title is
     underlined with hyphens.  *Note `@unnumberedsubsec'
     `@appendixsubsec' `@subheading': unnumberedsubsec appendixsubsec
     subheading.

`@subsection TITLE'
     Begin a subsection within a section.  In a printed manual, the
     subsection title is numbered and appears in the table of contents.
     In Info, the title is underlined with hyphens.  *Note
     `@subsection': subsection.

`@subsubheading TITLE'
     Print an unnumbered subsubsection-like heading in the text, but
     not in the table of contents of a printed manual.  In Info, the
     title is underlined with periods.  *Note The `subsub' Commands:
     subsubsection.

`@subsubsection TITLE'
     Begin a subsubsection within a subsection.  In a printed manual,
     the subsubsection title is numbered and appears in the table of
     contents.  In Info, the title is underlined with periods.  *Note
     The `subsub' Commands: subsubsection.

`@subtitle TITLE'
     In a printed manual, set a subtitle in a normal sized font flush to
     the right-hand side of the page.  Not relevant to Info, which does
     not have title pages.  *Note `@title' `@subtitle' and `@author'
     Commands: title subtitle author.

`@summarycontents'
     Print a short table of contents.  Not relevant to Info, which uses
     menus rather than tables of contents.  A synonym for
     `@shortcontents'.  *Note Generating a Table of Contents: Contents.

`@syncodeindex FROM-INDEX INTO-INDEX'
     Merge the index named in the first argument into the index named in
     the second argument, printing the entries from the first index in
     `@code' font.  *Note Combining Indices::.

`@synindex FROM-INDEX INTO-INDEX'
     Merge the index named in the first argument into the index named in
     the second argument.  Do not change the font of FROM-INDEX
     entries.  *Note Combining Indices::.

`@t{TEXT}'
     Print TEXT in a fixed-width, typewriter-like font.  No effect in
     Info.  *Note Fonts::.

`@table FORMATTING-COMMAND'
     Begin a two-column table, using `@item' for each entry.  Write
     each first column entry on the same line as `@item'.  First column
     entries are printed in the font resulting from FORMATTING-COMMAND.
     Pair with `@end table'.  *Note Making a Two-column Table:
     Two-column Tables.  Also see *Note `@ftable' and `@vtable': ftable
     vtable, and *Note `@itemx': itemx.

`@TeX{}'
     Insert the logo TeX.  *Note Inserting TeX and (C): TeX and
     copyright.

`@tex'
     Enter TeX completely.  Pair with `@end tex'.  *Note Using Ordinary
     TeX Commands: Using Ordinary TeX Commands.

`@thischapter'
     In a heading or footing, stands for the number and name of the
     current chapter, in the format `Chapter 1: Title'.  *Note How to
     Make Your Own Headings: Custom Headings.

`@thischaptername'
     In a heading or footing, stands for the name of the current
     chapter.  *Note How to Make Your Own Headings: Custom Headings.

`@thisfile'
     In a heading or footing, stands for the name of the current
     `@include' file.  Does not insert anything if not within an
     `@include' file.  *Note How to Make Your Own Headings: Custom
     Headings.

`@thispage'
     In a heading or footing, stands for the current page number.
     *Note How to Make Your Own Headings: Custom Headings.

`@thistitle'
     In a heading or footing, stands for the name of the document, as
     specified by the `@settitle' command.  *Note How to Make Your Own
     Headings: Custom Headings.

`@tindex ENTRY'
     Add ENTRY to the index of data types.  *Note Defining the Entries
     of an Index: Index Entries.

`@title TITLE'
     In a printed manual, set a title flush to the left-hand side of the
     page in a larger than normal font and underline it with a black
     rule.  Not relevant to Info, which does not have title pages.
     *Note The `@title' `@subtitle' and `@author' Commands: title
     subtitle author.

`@titlefont{TEXT}'
     In a printed manual, print TEXT in a larger than normal font.  Not
     relevant to Info, which does not have title pages.  *Note The
     `@titlefont' `@center' and `@sp' Commands: titlefont center sp.

`@titlepage'
     Indicate to Texinfo the beginning of the title page.  Write
     command on a line of its own.  Pair with `@end titlepage'.
     Nothing between `@titlepage' and `@end titlepage' appears in Info.
     *Note `@titlepage': titlepage.

`@today{}'
     Insert the current date, in `1 Jan 1900' style.  *Note How to Make
     Your Own Headings: Custom Headings.

`@top TITLE'
     In a Texinfo file to be formatted with `makeinfo', identify the
     topmost `@node' line in the file, which must be written on the line
     immediately preceding the `@top' command.  Used for `makeinfo''s
     node pointer insertion feature.  The title is underlined with
     asterisks.  Both the `@node' line and the `@top' line normally
     should be enclosed by `@ifinfo' and `@end ifinfo'.  In TeX and
     `texinfo-format-buffer', the `@top' command is merely a synonym
     for `@unnumbered'.  *Note Creating Pointers with `makeinfo':
     makeinfo Pointer Creation.

`@unnumbered TITLE'
     In a printed manual, begin a chapter that appears without chapter
     numbers of any kind.  The title appears in the table of contents
     of a printed manual.  In Info, the title is underlined with
     asterisks.  *Note `@unnumbered' and `@appendix': unnumbered &
     appendix.

`@unnumberedsec TITLE'
     In a printed manual, begin a section that appears without section
     numbers of any kind.  The title appears in the table of contents
     of a printed manual.  In Info, the title is underlined with equal
     signs.  *Note Section Commands: unnumberedsec appendixsec heading.

`@unnumberedsubsec TITLE'
     In a printed manual, begin an unnumbered subsection within a
     chapter.  The title appears in the table of contents of a printed
     manual.  In Info, the title is underlined with hyphens.  *Note
     `@unnumberedsubsec' `@appendixsubsec' `@subheading':
     unnumberedsubsec appendixsubsec subheading.

`@unnumberedsubsubsec TITLE'
     In a printed manual, begin an unnumbered subsubsection within a
     chapter.  The title appears in the table of contents of a printed
     manual.  In Info, the title is underlined with periods.  *Note The
     `subsub' Commands: subsubsection.

`@value{FLAG}'
     Replace FLAG with the value to which it is set by `@set FLAG'.
     *Note `@set' `@clear' `@value': set clear value.

`@var{METASYNTACTIC-VARIABLE}'
     Highlight a metasyntactic variable, which is something that stands
     for another piece of text.  *Note Indicating Metasyntactic
     Variables: var.

`@vindex ENTRY'
     Add ENTRY to the index of variables.  *Note Defining the Entries
     of an Index: Index Entries.

`@vskip AMOUNT'
     In a printed manual, insert whitespace so as to push text on the
     remainder of the page towards the bottom of the page.  Used in
     formatting the copyright page with the argument `0pt plus 1filll'.
     (Note spelling of `filll'.)  `@vskip' may be used only in
     contexts ignored for Info.  *Note The Copyright Page and Printed
     Permissions: Copyright & Permissions.

`@vtable FORMATTING-COMMAND'
     Begin a two-column table, using `@item' for each entry.
     Automatically enter each of the items in the first column into the
     index of variables.  Pair with `@end vtable'.  The same as
     `@table', except for indexing.  *Note `@ftable' and `@vtable':
     ftable vtable.

`@w{TEXT}'
     Prevent TEXT from being split across two lines.  Do not end a
     paragraph that uses `@w' with an `@refill' command.  In the
     Texinfo file, keep TEXT on one line.  *Note `@w': w.

`@xref{NODE-NAME, [ENTRY], [TOPIC-OR-TITLE], [INFO-FILE], [MANUAL]}'
     Make a reference that starts with `See' in a printed manual.
     Follow command with a punctuation mark.  Only the first argument is
     mandatory.  *Note `@xref': xref.

